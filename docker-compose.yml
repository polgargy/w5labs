version: '3'

######### Services ###################################

services:
  # Server container
  nginx:
    build:
      context: docker/${DOCKER_ENV}/nginx
      dockerfile: Dockerfile
    volumes:
      - ./:/var/www
      - ./docker/${DOCKER_ENV}/nginx/logs:/var/log/nginx
    ports:
      # Nuxt port
      - "${NUXT_PORT}:80"
      # Laravel port
      - "${LARAVEL_PORT}:81"
    links:
      - client
      - php

  # PHP FastCGI Process Manager container
  php:
    build:
      context: docker/${DOCKER_ENV}/php
      dockerfile: Dockerfile
    volumes:
      - ./api:/var/www/api
    environment:
      # If you down want to use xDebug, set remote_enable=0
      XDEBUG_CONFIG: "remote_enable=1"
      PHP_IDE_CONFIG: "serverName=Docker"
    # links:
      # - postgres
      # - postgres-testing
      # - mariadb
      #
      # - redis
      # - memcached
      #
      # - mailhog

  # Supervisor container (schedule and queue runner)
  # supervisor:
  #   build:
  #     context: docker/${DOCKER_ENV}/supervisor
  #     dockerfile: Dockerfile
  #   volumes:
  #     - ./:/var/www/
  #     - ./docker/${DOCKER_ENV}/supervisor/conf.d:/etc/supervisor/conf.d
  #     - ./docker/${DOCKER_ENV}/supervisor/logs:/var/log
  #   links:
  #     - postgres
  #     # - mariadb
  #     # - redis
  #     # - mailhog

  # PostgreSQL database container
  # postgres:
  #   build:
  #     context: docker/${DOCKER_ENV}/postgres
  #     dockerfile: Dockerfile
  #   volumes:
  #     # Database volume
  #     - database:/var/lib/postgresql/data
  #     # Temp volume to allow using dumps
  #     - ./docker/${DOCKER_ENV}/postgres/dumps/:/tmp/
  #   ports:
  #     - "${POSTGRES_PORT}:5432"
  #   environment:
  #     - LC_ALL=C.UTF-8
  #     - POSTGRES_DB=${POSTGRES_DB}
  #     - POSTGRES_USER=${POSTGRES_USER}
  #     - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}

  # PostgreSQL testing database container
  # postgres-testing:
  #   build:
  #     context: docker/${DOCKER_ENV}/postgres
  #     dockerfile: Dockerfile
  #   environment:
  #     - LC_ALL=C.UTF-8
  #     - POSTGRES_DB=${POSTGRES_DB}
  #     - POSTGRES_USER=${POSTGRES_USER}
  #     - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}

  # MariaDB
  # FIXME modify php and supervisor Dockerfile (search for "sql")
  # mariadb:
  #   build:
  #     context: docker/${DOCKER_ENV}/mariadb
  #     dockerfile: Dockerfile
  #   environment:
  #     MYSQL_DATABASE: ${MYSQL_DATABASE}
  #     MYSQL_USER: ${MYSQL_USER}
  #     MYSQL_PASSWORD: ${MYSQL_PASSWORD}
  #     MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
  #   ports:
  #     - "${MYSQL_PORT}:3306"
  #   expose:
  #     - '3306'
  #   volumes:
  #     # Database volume
  #     - database:/var/lib/mysql

  # Redis container
  # redis:
  #   build:
  #     context: docker/${DOCKER_ENV}/redis
  #     dockerfile: Dockerfile
  #   volumes:
  #     - redis:/data
  #   ports:
  #     - "${REDIS_PORT}:6379"
  #
  # Memcached
  # FIXME modify php Dockerfile (search for "memcached")
  # memcached:
  #   build:
  #     context: docker/${DOCKER_ENV}/memcached
  #     dockerfile: Dockerfile
  #   volumes:
  #     # - ./docker/${DOCKER_ENV}/memcached/data:/var/lib/memcached
  #     - memcached:/var/lib/memcached
  #   ports:
  #     - "${MEMCACHED_PORT}:11211"

  # Mailhog container (SMTP testing)
  # mailhog:
  #   build:
  #     context: docker/${DOCKER_ENV}/mailhog
  #     dockerfile: Dockerfile
  #   ports:
  #     - "${MAILHOG_PORT}:8025"

  # Client container
  client:
    build:
      context: docker/${DOCKER_ENV}/client
      dockerfile: Dockerfile
    volumes:
      - ./client:/var/www/client

######### Volumes ###################################

# volumes:
#   database:
#     driver: local
  # redis:
  #   driver: local
  #
  # memcached:
  #   driver: local
